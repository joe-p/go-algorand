// Package data provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package data

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/http"
	"net/url"
	"path"
	"strings"

	. "github.com/algorand/go-algorand/daemon/algod/api/server/v2/generated/model"
	"github.com/algorand/oapi-codegen/pkg/runtime"
	"github.com/getkin/kin-openapi/openapi3"
	"github.com/labstack/echo/v4"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Removes minimum sync round restriction from the ledger.
	// (DELETE /v2/ledger/sync)
	UnsetSyncRound(ctx echo.Context) error
	// Returns the minimum sync round the ledger is keeping in cache.
	// (GET /v2/ledger/sync)
	GetSyncRound(ctx echo.Context) error
	// Given a round, tells the ledger to keep that round in its cache.
	// (POST /v2/ledger/sync/{round})
	SetSyncRound(ctx echo.Context, round uint64) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// UnsetSyncRound converts echo context to params.
func (w *ServerInterfaceWrapper) UnsetSyncRound(ctx echo.Context) error {
	var err error

	ctx.Set(Api_keyScopes, []string{""})

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.UnsetSyncRound(ctx)
	return err
}

// GetSyncRound converts echo context to params.
func (w *ServerInterfaceWrapper) GetSyncRound(ctx echo.Context) error {
	var err error

	ctx.Set(Api_keyScopes, []string{""})

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetSyncRound(ctx)
	return err
}

// SetSyncRound converts echo context to params.
func (w *ServerInterfaceWrapper) SetSyncRound(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "round" -------------
	var round uint64

	err = runtime.BindStyledParameterWithLocation("simple", false, "round", runtime.ParamLocationPath, ctx.Param("round"), &round)
	if err != nil {
		return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf("Invalid format for parameter round: %s", err))
	}

	ctx.Set(Api_keyScopes, []string{""})

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.SetSyncRound(ctx, round)
	return err
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface, m ...echo.MiddlewareFunc) {
	RegisterHandlersWithBaseURL(router, si, "", m...)
}

// Registers handlers, and prepends BaseURL to the paths, so that the paths
// can be served under a prefix.
func RegisterHandlersWithBaseURL(router EchoRouter, si ServerInterface, baseURL string, m ...echo.MiddlewareFunc) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.DELETE(baseURL+"/v2/ledger/sync", wrapper.UnsetSyncRound, m...)
	router.GET(baseURL+"/v2/ledger/sync", wrapper.GetSyncRound, m...)
	router.POST(baseURL+"/v2/ledger/sync/:round", wrapper.SetSyncRound, m...)

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NHly8mjy8f8HAAD//3CL32ln9wAA",
	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
